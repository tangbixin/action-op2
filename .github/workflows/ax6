#============================================================
# Copyright (c) 2019-2021 nomcai <https://nomcai.ml>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/Joecaicai/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#============================================================

name: 5.10-AX6

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'      


env:
  REPO_URL: https://github.com/admin6750217/lede
  #REPO_URL: https://github.com/Boos4721/openwrt
  REPO_BRANCH: master 
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ax6.config
  DIY_P1_SH: diy1.sh
  DIY_P2_SH: diy2.sh
  DIY_P3_SH: diy3.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: 5.10-AX6
  PRODUCT_NAME: 5.10-AX6

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    #- name: WeChat notification
    #  run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}开始编译

    - name: Check space usage查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: Checkout
      uses: actions/checkout@master

    - name: Check server performance
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
        svn co https://github.com/kenzok8/openwrt-packages/trunk/luci-app-passwall package/luci-app-passwall
#        echo "::set-env name=useVersionInfo::$useVersionInfo"
#        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH       
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: Load custom P3
      run: |
        chmod +x $DIY_P3_SH
        $GITHUB_WORKSPACE/$DIY_P3_SH

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
#        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
#        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Check performance again
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
      
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        tar -zcvf AllPackages.tar.gz openwrt/bin/packages
        mv AllPackages.tar.gz openwrt/bin/targets/*/*
        cd openwrt/bin/targets/*/*
        rm -rf packages config.buildinfo feeds.buildinfo sha256sums version.buildinfo *.manifest
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
#       echo "::set-env name=FIRMWARE::$PWD"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
                   
    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: 🚀Autobuild / ${{ env.PRODUCT_NAME }} / ${{ env.DATE }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: master
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          🚀 Autobuild | 自动编译
          1、本固件为自动编译
          2、发行版中只提供完整的固件
          3、需要单独IPK请到分支下载
          4、驱动：默认NSS加速和sfe加速
          此版本是全能版本，也是自定义版本，涵盖所有插件，想要榨干路由器性能和内存的朋友可以尝试刷入.
          支持已刷WEB升级的openwrt固件，刷入方式：首选恢复出厂设置，然后再系统升级不保留配置刷入.
          全能版每天都会拉取最新源码更新.
          默认IP： 10.0.0.1 默认密码： password
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/admin6750217/lede)更新记录】
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 20
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          编译时间：${{ env.DATE }}
          lede更新信息：${{ env.useVersionInfo }}
          ${{ env.PRODUCT_NAME }}编译完成      
